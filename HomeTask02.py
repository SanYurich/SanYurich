# 1.	Найти сумму чисел списка стоящих на нечетной позиции
# Пример:[1,2,3,4] -> 4

# spisok = [1, 2, 3, 4, 5, 6, 7, 8 ]

# def Sum_not_even_numbers(list):
#     sum = 0
#     for i in list:
#         if i % 2 != 0:
#             sum = list[i-1] + sum
#     return sum
# print(spisok, ' -> ', Sum_not_even_numbers(spisok))

# 2.	Найти произведение пар чисел в списке. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
# Пример: [2, 3, 4, 5, 6] => [12, 15, 16]; [2, 3, 5, 6] => [12, 15]

# spisok = [2, 3, 4, 5, 6]
# def proizvedenie_par_numbers(list):
#     para_list = []
#     count = len(list)
#     i = 0
#     if count%2 != 0:
#         while i <= int(count/2):
#             para_list.append(spisok[i] * spisok[-1-i])
#             i +=1
#     else:
#         while i < int(count/2):
#             para_list.append(spisok[i] * spisok[-1-i])
#             i +=1
#     return para_list
# print(spisok, '=>', proizvedenie_par_numbers(spisok))

# 3.	В заданном списке вещественных чисел найдите разницу
# между максимальным и минимальным значением дробной части элементов.
# Пример: [1.1, 1.2, 3.1, 5, 10.01] => 0.19
#

# Варинт 1

# spisok = [1.1, 1.2, 3.1, 5, 10.01]
# decimal_list = []
# for i in range(len(spisok)):
#     decimal_list.append(round((spisok[i] % 1), 2))
# print(decimal_list, '=>', max(decimal_list) - min(decimal_list))


# Вариант2 с семинара

# import math

# spisok = [1.1, 1.2, 3.1, 5, 10.01]


# def diff_fractional_part_number(lst):
#     min = max = round(math.modf(lst[0])[0], 4)
#     for i in lst:
#         number = round(math.modf(i)[0], 4)
#         if max < number:
#             max = number
#         if number != 0 and min > number:
#             min = number
#     return max - min


# print(spisok, '=>', diff_fractional_part_number(spisok))


# 4.	Написать программу преобразования десятичного числа в двоичное

# Вариант 1
# print('Для преобразования, введите десятичное число: ')
# number = int(input())
# binar = []
# while number > 0:
#     binar.append(number % 2)
#     number = number//2
# binar.reverse()
# print('=>', binar)

# Вариант 2
# print('Для преобразования, введите десятичное число: ')
# number = int(input())
# binar = ""
# while number > 0:
#     binar = str(number % 2) + binar
#     number = number//2
# print('=>', binar)

# Экстра-задачи:
# 1. Написать программу преобразования двоичного числа в десятичное.

# 2. Создайте программу, которая будет играть в игру “коровы и быки” с пользователем. Игра работает так:

# Случайным образом генерируйте 4-значное число. Попросите пользователя угадать 4-значное число.
# За каждую цифру, которую пользователь правильно угадал в нужном месте, у них есть “корова”.
# За каждую цифру, которую пользователь угадал правильно, в неправильном месте стоит “бык”.
# Каждый раз, когда пользователь делает предположение, скажите им, сколько у них “коров” и “быков”.
# Как только пользователь угадает правильное число, игра окончена.
# Следите за количеством догадок, которые пользователь делает на протяжении всей игры, и сообщите пользователю в конце.

# 3.Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих. Начиная с 1 и 2, первые 10 элементов будут:
### 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.


# 4. Простые делители числа 13195 - это 5, 7, 13 и 29.
# Каков самый большой делитель числа 600851475143, являющийся простым числом?
